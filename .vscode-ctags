!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jin/Workspace/embedded/zephyr/wl55_zapp/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
APP_THREAD_STACK_SIZE	src/app.h	/^#define APP_THREAD_STACK_SIZE /;"	d
APP_VERSION_MAJOR	src/util/custom_typedefs.h	/^#define APP_VERSION_MAJOR /;"	d
APP_VERSION_MINOR	src/util/custom_typedefs.h	/^#define APP_VERSION_MINOR /;"	d
APP_VERSION_PATCH	src/util/custom_typedefs.h	/^#define APP_VERSION_PATCH /;"	d
AT_COMMAND_RX_BUFFER_MAX_SIZE	src/iface/at_command.h	/^#define AT_COMMAND_RX_BUFFER_MAX_SIZE /;"	d
AT_COMMAND_THREAD_IDX	src/init/thread_init.c	/^#define AT_COMMAND_THREAD_IDX /;"	d	file:
AT_COMMAND_THREAD_PRIO	src/init/thread_init.c	/^#define AT_COMMAND_THREAD_PRIO /;"	d	file:
EVENT_THREAD_IDX	src/init/thread_init.c	/^#define EVENT_THREAD_IDX /;"	d	file:
EVENT_THREAD_PRIO	src/init/thread_init.c	/^#define EVENT_THREAD_PRIO /;"	d	file:
LORA_CONFIG_FLASH_MEM_PAGE	src/file/flash_data.c	/^#define LORA_CONFIG_FLASH_MEM_PAGE /;"	d	file:
NUM_APP_THREADS	src/app.h	/^#define NUM_APP_THREADS /;"	d
TELEMETRY_LORA_DATA_MAX_LEN	src/telemetry/lora_io.h	/^#define TELEMETRY_LORA_DATA_MAX_LEN /;"	d
UART_CONFIG_FLASH_MEM_PAGE	src/file/flash_data.c	/^#define UART_CONFIG_FLASH_MEM_PAGE /;"	d	file:
UART_PRINTF_MAX_SIZE	src/telemetry/uart_io.c	/^#define UART_PRINTF_MAX_SIZE /;"	d	file:
__APP_H__	src/app.h	/^#define __APP_H__$/;"	d
__AT_ADR_H__	src/at/adr.h	/^#define __AT_ADR_H__$/;"	d
__AT_CH_H__	src/at/ch.h	/^#define __AT_CH_H__$/;"	d
__AT_C_MSG_HEX_H__	src/at/c_msg_hex.h	/^#define __AT_C_MSG_HEX_H__$/;"	d
__AT_C_MSG_H__	src/at/c_msg.h	/^#define __AT_C_MSG_H__$/;"	d
__AT_DR_H__	src/at/dr.h	/^#define __AT_DR_H__$/;"	d
__AT_FDEFAULT_H__	src/at/fdefault.h	/^#define __AT_FDEFAULT_H__$/;"	d
__AT_ID_H__	src/at/id.h	/^#define __AT_ID_H__$/;"	d
__AT_LOW_POWER_H__	src/at/low_power.h	/^#define __AT_LOW_POWER_H__$/;"	d
__AT_MODE_H__	src/at/mode.h	/^#define __AT_MODE_H__$/;"	d
__AT_MSG_HEX_H__	src/at/msg_hex.h	/^#define __AT_MSG_HEX_H__$/;"	d
__AT_MSG_H__	src/at/msg.h	/^#define __AT_MSG_H__$/;"	d
__AT_PORT_H__	src/at/port.h	/^#define __AT_PORT_H__$/;"	d
__AT_POWER_H__	src/at/power.h	/^#define __AT_POWER_H__$/;"	d
__AT_P_MSG_HEX_H__	src/at/p_msg_hex.h	/^#define __AT_P_MSG_HEX_H__$/;"	d
__AT_P_MSG_H__	src/at/p_msg.h	/^#define __AT_P_MSG_H__$/;"	d
__AT_REPT_H__	src/at/rept.h	/^#define __AT_REPT_H__$/;"	d
__AT_RESET_H__	src/at/reset.h	/^#define __AT_RESET_H__$/;"	d
__AT_RETRY_H__	src/at/retry.h	/^#define __AT_RETRY_H__$/;"	d
__AT_VER_H__	src/at/ver.h	/^#define __AT_VER_H__$/;"	d
__DEVICE_DEVICES_H__	src/device/devices.h	/^#define __DEVICE_DEVICES_H__$/;"	d
__EVENTS_DEVICE_CALLBACKS_H__	src/events/device_callbacks.h	/^#define __EVENTS_DEVICE_CALLBACKS_H__$/;"	d
__FILE_FLASH_DATA_H__	src/file/flash_data.h	/^#define __FILE_FLASH_DATA_H__$/;"	d
__IFACE_AT_COMMAND_H__	src/iface/at_command.h	/^#define __IFACE_AT_COMMAND_H__$/;"	d
__INIT_DEV_INIT_H__	src/init/dev_init.h	/^#define __INIT_DEV_INIT_H__$/;"	d
__INIT_ENV_INIT_H__	src/init/env_init.h	/^#define __INIT_ENV_INIT_H__$/;"	d
__INIT_THREAD_INIT_H__	src/init/thread_init.h	/^#define __INIT_THREAD_INIT_H__$/;"	d
__TELEMETRY_LORA_IO_H__	src/telemetry/lora_io.h	/^#define __TELEMETRY_LORA_IO_H__$/;"	d
__TELEMETRY_UART_IO_H__	src/telemetry/uart_io.h	/^#define __TELEMETRY_UART_IO_H__$/;"	d
__UTIL_CUSTOM_TYPEDEFS_H__	src/util/custom_typedefs.h	/^#define __UTIL_CUSTOM_TYPEDEFS_H__$/;"	d
__WORKERS_AT_COMMAND_H__	src/workers/at_command.h	/^#define __WORKERS_AT_COMMAND_H__$/;"	d
__WORKERS_EVENT_H__	src/workers/event.h	/^#define __WORKERS_EVENT_H__$/;"	d
_flash_mem_init	src/init/dev_init.c	/^static void _flash_mem_init(const struct devices* devs)$/;"	f	typeref:typename:void	file:
_get_dfu_btn	src/device/devices.c	/^static void _get_dfu_btn(struct devices* devs)$/;"	f	typeref:typename:void	file:
_get_flash	src/device/devices.c	/^static void _get_flash(struct devices* devs)$/;"	f	typeref:typename:void	file:
_get_fr_btn	src/device/devices.c	/^static void _get_fr_btn(struct devices* devs)$/;"	f	typeref:typename:void	file:
_get_i2c	src/device/devices.c	/^static void _get_i2c(struct devices* devs)$/;"	f	typeref:typename:void	file:
_get_led	src/device/devices.c	/^static void _get_led(struct devices* devs)$/;"	f	typeref:typename:void	file:
_get_lora	src/device/devices.c	/^static void _get_lora(struct devices* devs)$/;"	f	typeref:typename:void	file:
_get_spi	src/device/devices.c	/^static void _get_spi(struct devices* devs)$/;"	f	typeref:typename:void	file:
_get_uart	src/device/devices.c	/^static void _get_uart(struct devices* devs)$/;"	f	typeref:typename:void	file:
_init_app_threads	src/init/thread_init.c	/^static void _init_app_threads(struct app_data* app_data)$/;"	f	typeref:typename:void	file:
_init_worker	src/workers/at_command.c	/^static void _init_worker()$/;"	f	typeref:typename:void	file:
_init_worker	src/workers/event.c	/^static void _init_worker()$/;"	f	typeref:typename:void	file:
_loop	src/workers/at_command.c	/^static void _loop(const struct app_data* app_data)$/;"	f	typeref:typename:void	file:
_loop	src/workers/event.c	/^static void _loop(const struct app_data* app_data)$/;"	f	typeref:typename:void	file:
_lora_init	src/init/dev_init.c	/^static void _lora_init(const struct devices* devs)$/;"	f	typeref:typename:void	file:
_parse_lora_options	src/init/dev_init.c	/^static void _parse_lora_options(const struct device* flash_dev,$/;"	f	typeref:typename:void	file:
_parse_uart_options	src/init/dev_init.c	/^static void _parse_uart_options(const struct device* flash_dev,$/;"	f	typeref:typename:void	file:
_set_default_lora_config	src/init/dev_init.c	/^static void _set_default_lora_config(struct lora_modem_config* cfg)$/;"	f	typeref:typename:void	file:
_set_default_uart_config	src/init/dev_init.c	/^static void _set_default_uart_config(struct uart_config* cfg)$/;"	f	typeref:typename:void	file:
_start_app_threads	src/init/thread_init.c	/^static void _start_app_threads(const struct app_data* app_data)$/;"	f	typeref:typename:void	file:
_uart_init	src/init/dev_init.c	/^static void _uart_init(const struct devices* devs)$/;"	f	typeref:typename:void	file:
_validate_lora_options	src/init/dev_init.c	/^static bool _validate_lora_options(const struct lora_modem_config* cfg)$/;"	f	typeref:typename:bool	file:
_validate_uart_options	src/init/dev_init.c	/^static bool _validate_uart_options(const struct uart_config* cfg)$/;"	f	typeref:typename:bool	file:
app_alive	src/app.h	/^    bool                           app_alive;$/;"	m	struct:app_data	typeref:typename:bool
app_data	src/app.h	/^struct app_data$/;"	s
app_data	src/main.c	/^struct app_data app_data = { 0 };$/;"	v	typeref:struct:app_data
app_deinit	src/app.c	/^void app_deinit(const struct app_data* app_data)$/;"	f	typeref:typename:void
app_init	src/app.c	/^void app_init(struct app_data* app_data)$/;"	f	typeref:typename:void
app_start	src/app.c	/^void app_start(const struct app_data* app_data)$/;"	f	typeref:typename:void
app_thread_stacks	src/app.h	/^    struct z_thread_stack_element app_thread_stacks[NUM_APP_THREADS][APP_THREAD_STACK_SIZE + 32]/;"	m	struct:app_data	typeref:struct:z_thread_stack_element[][]
app_threads	src/app.h	/^    struct k_thread                app_threads[NUM_APP_THREADS];$/;"	m	struct:app_data	typeref:struct:k_thread[]
at_adr_handler	src/at/adr.c	/^int at_adr_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_c_msg_handler	src/at/c_msg.c	/^int at_c_msg_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_c_msg_hex_handler	src/at/c_msg_hex.c	/^int at_c_msg_hex_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_ch_handler	src/at/ch.c	/^int at_ch_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_cmd_ctx	src/workers/at_command.c	/^struct at_command_context at_cmd_ctx = { 0, };$/;"	v	typeref:struct:at_command_context
at_command_cb_func_t	src/iface/at_command.h	/^typedef int(*at_command_cb_func_t)(int, char**);$/;"	t	typeref:typename:int (*)(int,char **)
at_command_cfg	src/iface/at_command.h	/^struct at_command_cfg$/;"	s
at_command_cmd	src/iface/at_command.h	/^struct at_command_cmd$/;"	s
at_command_context	src/iface/at_command.h	/^struct at_command_context$/;"	s
at_command_init	src/iface/at_command.c	/^bool at_command_init(struct at_command_context* ctx, const struct at_command_cfg* cfg)$/;"	f	typeref:typename:bool
at_dr_handler	src/at/dr.c	/^int at_dr_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_fdefault_handler	src/at/fdefault.c	/^int at_fdefault_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_id_handler	src/at/id.c	/^int at_id_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_low_power_handler	src/at/low_power.c	/^int at_low_power_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_mode_handler	src/at/mode.c	/^int at_mode_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_msg_handler	src/at/msg.c	/^int at_msg_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_msg_hex_handler	src/at/msg_hex.c	/^int at_msg_hex_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_p_msg_handler	src/at/p_msg.c	/^int at_p_msg_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_p_msg_hex_handler	src/at/p_msg_hex.c	/^int at_p_msg_hex_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_port_handler	src/at/port.c	/^int at_port_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_power_handler	src/at/power.c	/^int at_power_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_rept_handler	src/at/rept.c	/^int at_rept_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_reset_handler	src/at/reset.c	/^int at_reset_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_retry_handler	src/at/retry.c	/^int at_retry_handler(int argc, char** argv)$/;"	f	typeref:typename:int
at_ver_handler	src/at/ver.c	/^int at_ver_handler(int argc, char** argv)$/;"	f	typeref:typename:int
callback	src/iface/at_command.h	/^    at_command_cb_func_t callback;$/;"	m	struct:at_command_cmd	typeref:typename:at_command_cb_func_t
cfg	src/iface/at_command.h	/^    struct at_command_cfg cfg;$/;"	m	struct:at_command_context	typeref:struct:at_command_cfg
data	src/telemetry/lora_io.h	/^    uint8_t data[TELEMETRY_LORA_DATA_MAX_LEN];$/;"	m	struct:lora_data	typeref:typename:uint8_t[]
dev_init	src/init/dev_init.c	/^void dev_init(const struct devices* devs)$/;"	f	typeref:typename:void
devices	src/device/devices.h	/^struct devices$/;"	s
devs	src/app.h	/^    struct devices*                devs;$/;"	m	struct:app_data	typeref:struct:devices *
devs	src/device/devices.c	/^static struct devices devs = { 0, };$/;"	v	typeref:struct:devices	file:
dfu_btn	src/device/devices.h	/^    const struct gpio_dt_spec* dfu_btn;$/;"	m	struct:devices	typeref:typename:const struct gpio_dt_spec *
dfu_btn_spec	src/device/devices.c	/^static const struct gpio_dt_spec dfu_btn_spec =$/;"	v	typeref:typename:const struct gpio_dt_spec	file:
enable_led_error	src/device/devices.c	/^void enable_led_error(const struct gpio_dt_spec* led_dev)$/;"	f	typeref:typename:void
env_init	src/init/env_init.c	/^void env_init(struct app_data* app_data)$/;"	f	typeref:typename:void
flash	src/device/devices.h	/^    const struct device*       flash;$/;"	m	struct:devices	typeref:typename:const struct device *
flash_read_lora_config	src/file/flash_data.c	/^int flash_read_lora_config(const struct device *flash_dev,$/;"	f	typeref:typename:int
flash_read_uart_config	src/file/flash_data.c	/^int flash_read_uart_config(const struct device *flash_dev,$/;"	f	typeref:typename:int
flash_write_lora_config	src/file/flash_data.c	/^int flash_write_lora_config(const struct device *flash_dev,$/;"	f	typeref:typename:int
flash_write_uart_config	src/file/flash_data.c	/^int flash_write_uart_config(const struct device *flash_dev,$/;"	f	typeref:typename:int
format_write_buf	src/telemetry/uart_io.c	/^char format_write_buf[UART_PRINTF_MAX_SIZE] = { 0, };$/;"	v	typeref:typename:char[]
fr_btn	src/device/devices.h	/^    const struct gpio_dt_spec* fr_btn;$/;"	m	struct:devices	typeref:typename:const struct gpio_dt_spec *
fr_btn_spec	src/device/devices.c	/^static const struct gpio_dt_spec fr_btn_spec =$/;"	v	typeref:typename:const struct gpio_dt_spec	file:
get_devices	src/device/devices.c	/^void get_devices(struct app_data* app_data)$/;"	f	typeref:typename:void
i2c	src/device/devices.h	/^    const struct device*       i2c;$/;"	m	struct:devices	typeref:typename:const struct device *
is_app_alive	src/app.c	/^bool is_app_alive(const struct app_data* app_data)$/;"	f	typeref:typename:bool
led	src/device/devices.h	/^    const struct gpio_dt_spec* led;$/;"	m	struct:devices	typeref:typename:const struct gpio_dt_spec *
led_spec	src/device/devices.c	/^static const struct gpio_dt_spec led_spec =$/;"	v	typeref:typename:const struct gpio_dt_spec	file:
lora	src/device/devices.h	/^    const struct device*       lora;$/;"	m	struct:devices	typeref:typename:const struct device *
lora_data	src/telemetry/lora_io.h	/^struct lora_data$/;"	s
lora_recv_callback	src/events/device_callbacks.c	/^void lora_recv_callback(const struct device* lora_dev, uint8_t* data,$/;"	f	typeref:typename:void
main	src/main.c	/^void main(void)$/;"	f	typeref:typename:void
main_command	src/iface/at_command.h	/^    char                  main_command[8]; \/\/ default "AT"$/;"	m	struct:at_command_context	typeref:typename:char[8]
main_command	src/iface/at_command.h	/^    char main_command[8];$/;"	m	struct:at_command_cfg	typeref:typename:char[8]
num_app_threads	src/app.h	/^    size_t                         num_app_threads;$/;"	m	struct:app_data	typeref:typename:size_t
recv_data	src/events/device_callbacks.c	/^struct lora_data recv_data = { 0, };$/;"	v	typeref:struct:lora_data
rssi	src/telemetry/lora_io.h	/^    int16_t rssi; \/\/ out$/;"	m	struct:lora_data	typeref:typename:int16_t
rx_buffer	src/iface/at_command.h	/^    char                  rx_buffer[AT_COMMAND_RX_BUFFER_MAX_SIZE];$/;"	m	struct:at_command_context	typeref:typename:char[]
size	src/telemetry/lora_io.h	/^    size_t  size;$/;"	m	struct:lora_data	typeref:typename:size_t
snr	src/telemetry/lora_io.h	/^    int8_t  snr; \/\/ out$/;"	m	struct:lora_data	typeref:typename:int8_t
spi	src/device/devices.h	/^    const struct device*       spi;$/;"	m	struct:devices	typeref:typename:const struct device *
sub_commands	src/iface/at_command.h	/^    char sub_commands[8][64];$/;"	m	struct:at_command_cfg	typeref:typename:char[8][64]
threads_destoy	src/init/thread_init.c	/^void threads_destoy(const struct app_data* app_data)$/;"	f	typeref:typename:void
threads_init	src/init/thread_init.c	/^void threads_init(struct app_data* app_data)$/;"	f	typeref:typename:void
threads_start	src/init/thread_init.c	/^void threads_start(const struct app_data* app_data)$/;"	f	typeref:typename:void
uart	src/device/devices.h	/^    const struct device*       uart;$/;"	m	struct:devices	typeref:typename:const struct device *
uart_irq_callback	src/events/device_callbacks.c	/^void uart_irq_callback(const struct device* uart_dev, void* user_data)$/;"	f	typeref:typename:void
uart_output_mtx	src/app.h	/^    struct k_mutex                 uart_output_mtx;$/;"	m	struct:app_data	typeref:struct:k_mutex
uart_print	src/telemetry/uart_io.c	/^int uart_print(const struct device* uart_dev, uint8_t* data, size_t size)$/;"	f	typeref:typename:int
uart_printf	src/telemetry/uart_io.c	/^int uart_printf(const struct device* uart_dev, const char* fmt, ...)$/;"	f	typeref:typename:int
worker_at_command_handler	src/workers/at_command.c	/^void worker_at_command_handler(const struct app_data* app_data)$/;"	f	typeref:typename:void
worker_event_handler	src/workers/event.c	/^void worker_event_handler(const struct app_data* app_data)$/;"	f	typeref:typename:void
